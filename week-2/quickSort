#include <iostream>
#include <time.h>
#include <vector>
using namespace std;
int partition(vector<int>&arr, int low , int high){
    int pivot = arr[low];
    int i = low;
    int j = high;
    while( i < j){
        while(arr[i] <= pivot && i<=high-1){
            i++;
        }

        while(arr[j] > pivot && j>=low+1){
            j--;
        }
        if(i<j) swap(arr[i], arr[j]);
    }
    swap(arr[low], arr[j]);
    return j;

}

void quickSort(vector<int>&arr , int low , int high){
    if(low < high){
        int pindex = partition(arr,low , high);
        quickSort(arr, low , pindex-1);
        quickSort(arr, pindex+1 ,high);
    }
}
int main(){
    vector<int>arr = {2,4,2532,123,12,43,56};
    cout << "Before Sorting:"<<endl;
    for(int i=0; i<arr.size(); i++){ 
        cout << arr[i] << " ";
    }

    cout << endl;
    cout << "After Sorting:"<<endl;
    clock_t start , end;
    start = clock();
    quickSort(arr,0, arr.size()-1);
    end = clock();
    for(int i=0; i<arr.size(); i++){
        cout << arr[i] << " ";
    }
    
    double time_taken = double(end - start) / CLOCKS_PER_SEC;
    cout << "\nTime taken by quick sort: " << time_taken << " seconds." << endl;
    return 0;

}
